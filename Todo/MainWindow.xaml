<Window x:Class="Todo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Todo"
        mc:Ignorable="d"
        Title="Todo | Today 27th August 2025" Height="600" Width="800"
        Background="White">
    <Window.Resources>
        <!-- Minimal Calendar Style -->
        <Style x:Key="MinimalCalendarStyle" TargetType="Calendar">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Padding" Value="0"/>
        </Style>
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
        <local:CountToVisibilityConverter x:Key="CountToVis"/>

        <!-- Custom vertical scrollbar style: arrows match combobox caret; thumb is a single black line -->
        <Style x:Key="VerticalScrollBarStyle" TargetType="ScrollBar">
            <Setter Property="Width" Value="16" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollBar">
                        <Grid Background="Transparent">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <!-- Up Arrow -->
                            <RepeatButton x:Name="PART_LineUpButton" Grid.Row="0" Height="20" Focusable="False" IsTabStop="False" Background="Transparent" BorderThickness="0">
                                <Viewbox Width="10" Height="8" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Canvas Width="8" Height="8">
                                        <!-- Two stroked lines forming the upper edges of a caret (pointing up) -->
                                        <Path Data="M1,7 L4,4 M7,7 L4,4"
                                              Stroke="Black"
                                              StrokeThickness="1.5"
                                              StrokeStartLineCap="Round"
                                              StrokeEndLineCap="Round"
                                              Fill="Transparent"/>
                                    </Canvas>
                                </Viewbox>
                            </RepeatButton>

                            <!-- Track with Thumb -->
                            <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="ScrollBar.PageUpCommand" Background="Transparent" BorderThickness="0"/>
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <!-- Do NOT set an explicit Height on the Thumb. Track will size it; the inner Rectangle will stretch vertically to fill the Thumb. -->
                                    <Thumb x:Name="PART_Thumb" Cursor="Hand" Background="Transparent" BorderThickness="0">
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="Thumb">
                                                <!-- Single black vertical line as the marker; stretch to fill Thumb height and use rounded caps -->
                                                <Grid Width="16" Background="Transparent">
                                                    <Rectangle Width="2" Fill="Black" HorizontalAlignment="Center" RadiusX="3" RadiusY="3"
                                                               VerticalAlignment="Stretch" Margin="0" />
                                                </Grid>
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="ScrollBar.PageDownCommand" Background="Transparent" BorderThickness="0"/>
                                </Track.IncreaseRepeatButton>
                            </Track>

                            <!-- Down Arrow -->
                            <RepeatButton x:Name="PART_LineDownButton" Grid.Row="2" Height="20" Focusable="False" IsTabStop="False" Background="Transparent" BorderThickness="0">
                                <Viewbox Width="10" Height="8" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Canvas Width="8" Height="8">
                                        <!-- Two stroked lines forming the lower edges of a caret (pointing down) -->
                                        <Path Data="M1,1 L4,4 M7,1 L4,4"
                                              Stroke="Black"
                                              StrokeThickness="1.5"
                                              StrokeStartLineCap="Round"
                                              StrokeEndLineCap="Round"
                                              Fill="Transparent"/>
                                    </Canvas>
                                </Viewbox>
                            </RepeatButton>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Clean filter ComboBox style for People/Meetings modes -->
        <Style x:Key="FilterComboBoxStyle" TargetType="ComboBox">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="6,4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="4"
                                    SnapsToDevicePixels="True">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="24"/>
                                    </Grid.ColumnDefinitions>

                                    <ContentPresenter x:Name="ContentSite"
                                                      IsHitTestVisible="False"
                                                      Content="{TemplateBinding SelectionBoxItem}"
                                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                      Margin="4,0,4,0"
                                                      VerticalAlignment="Center"/>

                                    <ToggleButton Grid.Column="1"
                                                  x:Name="DropDownToggle"
                                                  Focusable="False"
                                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                  ClickMode="Press"
                                                  Background="Transparent"
                                                  BorderThickness="0"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center">
                                        <!-- Two stroked lines forming the lower edges of a caret -->
                                        <Path Data="M1,1 L4,4 M7,1 L4,4"
                                              Stroke="Black"
                                              StrokeThickness="1.5"
                                              StrokeStartLineCap="Round"
                                              StrokeEndLineCap="Round"
                                              Fill="Transparent"
                                              Width="10"
                                              Height="6"
                                              Stretch="Uniform"/>
                                    </ToggleButton>
                                </Grid>
                            </Border>

                            <Popup x:Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                <Border x:Name="PopupBorder"
                                        Background="White"
                                        BorderBrush="Black"
                                        BorderThickness="1"
                                        CornerRadius="4"
                                        SnapsToDevicePixels="True"
                                        Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ScrollViewer CanContentScroll="True">
                                        <ItemsPresenter HorizontalAlignment="Stretch" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="False">
                                <Setter TargetName="Popup" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="#888"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="#CCC"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Custom style for ... button -->
        <Style x:Key="TaskOptionsButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Width" Value="28"/>
            <Setter Property="Height" Value="28"/>
            <Setter Property="ToolTip" Value="Edit task"/>
            <Setter Property="Margin" Value="0,0,8,0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#e6f0fa"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#3399ff"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#3399ff"/>
                                <Setter TargetName="border" Property="Background" Value="#e6f0fa"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- iOS-like toggle style (simple) -->
        <Style x:Key="IosToggleStyle" TargetType="ToggleButton">
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="22"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Border x:Name="SwitchBorder" Width="40" Height="22" CornerRadius="11" Background="#e5e5ea" />
                            <Ellipse x:Name="Knob" Width="18" Height="18" Fill="White" Margin="2,2,0,2" HorizontalAlignment="Left" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="SwitchBorder" Property="Background" Value="#34C759" />
                                <Setter TargetName="Knob" Property="Margin" Value="0,2,2,2" />
                                <Setter TargetName="Knob" Property="HorizontalAlignment" Value="Right" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="SwitchBorder" Property="Opacity" Value="0.95" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <!-- Bottom row reserved for backup button so the ListView doesn't overlap it -->
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <!-- DATE / SEARCH -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

            <!--DATE-->
            <Grid Margin="0,0,0,0" VerticalAlignment="Top" HorizontalAlignment="Left">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40"/>
                    <ColumnDefinition Width="260"/>
                    <ColumnDefinition Width="40"/>
                    <ColumnDefinition Width="40"/>
                    <ColumnDefinition Width="40"/>
                </Grid.ColumnDefinitions>

                <!-- Date controls container -->
                <Grid x:Name="DateControlsGrid" Grid.Column="0" Grid.ColumnSpan="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="260"/>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0" Name="PreviousDayButton" Click="PreviousDayButton_Click" Width="32" Height="32" FontWeight="Normal">&lt;</Button>
                    <Button Grid.Column="1" Name="CurrentDayButton" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="8,0" IsHitTestVisible="False" Background="Transparent" BorderBrush="Transparent" FontWeight="Normal" Content="Wednesday, 27th August, 2025"/>
                    <Button Grid.Column="2" Name="CalendarButton" Click="CalendarButton_Click" Width="32" Height="32" Background="Transparent" BorderBrush="Transparent" ToolTip="Open calendar" FontWeight="Normal">
                        <Viewbox Width="24" Height="24">
                            <Canvas Width="24" Height="24">
                                <!-- Clean, contemporary calendar icon: outline only, no fill -->
                                <Rectangle Width="18" Height="14" Stroke="Black" StrokeThickness="1.5" RadiusX="2" RadiusY="2" Canvas.Left="3" Canvas.Top="5" Fill="Transparent"/>
                                <Line X1="3" Y1="9" X2="21" Y2="9" Stroke="Black" StrokeThickness="1.2"/>
                                <Line X1="7" Y1="5" X2="7" Y2="3" Stroke="Black" StrokeThickness="1.5"/>
                                <Line X1="17" Y1="5" X2="17" Y2="3" Stroke="Black" StrokeThickness="1.5"/>
                            </Canvas>
                        </Viewbox>
                    </Button>
                    <!-- Jump to Today button placed next to the calendar dropdown -->
                    <Button Grid.Column="3" Name="JumpToTodayButton" Click="JumpToTodayButton_Click" Width="32" Height="32" Background="Transparent" BorderBrush="Transparent" ToolTip="Jump to today" FontWeight="Normal">
                        <Viewbox Width="20" Height="20">
                            <Canvas Width="24" Height="24">
                                <!-- Two visuals: dot (default) and check (shown when already on today) -->
                                <Ellipse x:Name="JumpTodayDot" Width="10" Height="10" Canvas.Left="7" Canvas.Top="6" Stroke="Black" StrokeThickness="1" Fill="Black"/>
                                <Path x:Name="JumpTodayCheck" Data="M6,12 L10,16 L18,8" Stroke="Black" StrokeThickness="2" StrokeEndLineCap="Round" StrokeStartLineCap="Round" Fill="Transparent" Visibility="Collapsed"/>
                            </Canvas>
                        </Viewbox>
                    </Button>
                    <Button Grid.Column="4" Name="NextDayButton" Click="NextDayButton_Click" Width="32" Height="32" FontWeight="Normal">&gt;</Button>
                </Grid>

                <!-- People filter combobox shown when in People mode -->
                <Grid Grid.Column="1" Visibility="Collapsed" x:Name="PeopleFilterContainer">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ComboBox x:Name="PeopleFilterComboBox" Grid.Column="0" IsEditable="False" SelectionChanged="PeopleFilterComboBox_SelectionChanged" HorizontalAlignment="Stretch" Style="{StaticResource FilterComboBoxStyle}" MaxWidth="300"/>
                    <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center" Margin="8,0,0,0">
                        <ToggleButton x:Name="PeopleShowAllToggle" Style="{StaticResource IosToggleStyle}" Checked="PeopleShowAllToggle_Checked" Unchecked="PeopleShowAllToggle_Unchecked" />
                        <TextBlock Text="Show all people" VerticalAlignment="Center" Margin="6,0,0,0" FontSize="12" Foreground="Black"/>
                    </StackPanel>
                </Grid>

                <!-- Meetings filter combobox shown when in Meetings mode -->
                <Grid Grid.Column="1" Visibility="Collapsed" x:Name="MeetingsFilterContainer">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ComboBox x:Name="MeetingsFilterComboBox" Grid.Column="0" IsEditable="False" SelectionChanged="MeetingsFilterComboBox_SelectionChanged" HorizontalAlignment="Stretch" Style="{StaticResource FilterComboBoxStyle}" MaxWidth="300"/>
                    <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center" Margin="8,0,0,0">
                        <ToggleButton x:Name="MeetingsShowAllToggle" Style="{StaticResource IosToggleStyle}" Checked="MeetingsShowAllToggle_Checked" Unchecked="MeetingsShowAllToggle_Unchecked" />
                        <TextBlock Text="Show all meetings" VerticalAlignment="Center" Margin="6,0,0,0" FontSize="12" Foreground="Black"/>
                    </StackPanel>
                </Grid>

                <!-- Search box shown when in All mode -->
                <Grid Grid.Column="1" Width="240" Visibility="Collapsed" x:Name="SearchBoxBorder">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="24"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <!-- Search icon (no underline) -->
                    <Viewbox Grid.Column="0" Width="18" Height="18" VerticalAlignment="Center">
                        <Canvas Width="24" Height="24">
                            <Ellipse Width="12" Height="12" Canvas.Left="2" Canvas.Top="2" Stroke="Black" StrokeThickness="1.5" Fill="Transparent"/>
                            <Line X1="14" Y1="14" X2="21" Y2="21" Stroke="Black" StrokeThickness="1.8" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                        </Canvas>
                    </Viewbox>
                    <!-- TextBox wrapped in a Border so the bottom hairline is only under the typing area -->
                    <Border Grid.Column="1" x:Name="SearchTextBorder" BorderBrush="Black" BorderThickness="0,0,0,1" Background="Transparent" VerticalAlignment="Center">
                        <TextBox x:Name="SearchTextBox" BorderThickness="0" Background="Transparent" Visibility="Collapsed" TextChanged="SearchTextBox_TextChanged" VerticalAlignment="Center" Padding="4,2"/>
                    </Border>
                </Grid>

                <Popup x:Name="CalendarPopup" PlacementTarget="{Binding ElementName=CalendarButton}" Placement="Bottom" StaysOpen="False">
                    <Border Background="White">
                        <Calendar x:Name="CalendarControl" SelectedDatesChanged="CalendarControl_SelectedDatesChanged"/>
                    </Border>
                </Popup>

                <!-- Filter popup shown for people/meetings modes (unused when using combobox) -->
                <Popup x:Name="FilterPopup" PlacementTarget="{Binding ElementName=CalendarButton}" Placement="Bottom" StaysOpen="False" AllowsTransparency="True">
                    <Border Background="White" Padding="6" CornerRadius="4" BorderBrush="#FFCCCCCC" BorderThickness="1">
                        <ListBox x:Name="FilterListBox" Width="220" SelectionChanged="FilterListBox_SelectionChanged"/>
                    </Border>
                </Popup>
            </Grid>

            <!--MODE CONTROLS-->
            <Grid Grid.Column="1">
                <UniformGrid Columns="4" Rows="1" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,0,0">
                    <!-- Today button (redesigned for clarity) -->
                    <Button Name="TodayButton" Click="TodayButton_Click" ToolTip="Today" Margin="4,0">
                        <Viewbox Width="18" Height="18">
                            <Canvas Width="24" Height="24">
                                <!-- Calendar page with a filled dot representing today -->
                                <Rectangle Width="16" Height="12" Canvas.Left="4" Canvas.Top="5" Stroke="Black" StrokeThickness="1.2" RadiusX="2" RadiusY="2" Fill="Transparent"/>
                                <Rectangle Width="12" Height="3" Canvas.Left="6" Canvas.Top="3" Fill="Black"/>
                                <Ellipse Width="6" Height="6" Canvas.Left="9" Canvas.Top="8" Fill="Black"/>
                            </Canvas>
                        </Viewbox>
                    </Button>

                    <!-- People button -->
                    <Button Name="PeopleButton" Click="PeopleButton_Click" ToolTip="People" Margin="4,0">
                        <Viewbox Width="18" Height="18">
                            <Canvas Width="24" Height="24">
                                <Ellipse Width="6" Height="6" Canvas.Left="6" Canvas.Top="5" Stroke="Black" StrokeThickness="1.2" Fill="Transparent"/>
                                <Ellipse Width="6" Height="6" Canvas.Left="14" Canvas.Top="5" Stroke="Black" StrokeThickness="1.2" Fill="Transparent"/>
                                <Path Stroke="Black" StrokeThickness="1.2" Fill="Transparent" Data="M2,18 Q12,14 22,18"/>
                            </Canvas>
                        </Viewbox>
                    </Button>

                    <!-- Meetings button -->
                    <Button Name="MeetingButton" Click="MeetingButton_Click" ToolTip="Meetings" Margin="4,0">
                        <Viewbox Width="18" Height="18">
                            <Canvas Width="24" Height="24">
                                <Rectangle Width="16" Height="12" Canvas.Left="4" Canvas.Top="6" Stroke="Black" StrokeThickness="1.2" RadiusX="2" RadiusY="2" Fill="Transparent"/>
                                <Ellipse Width="5" Height="5" Canvas.Left="14" Canvas.Top="9" Stroke="Black" StrokeThickness="1" Fill="Transparent"/>
                                <Line X1="16.5" Y1="12" X2="16.5" Y2="10" Stroke="Black" StrokeThickness="1"/>
                                <Line X1="16.5" Y1="12" X2="18.5" Y2="12" Stroke="Black" StrokeThickness="1"/>
                            </Canvas>
                        </Viewbox>
                    </Button>

                    <!-- All button -->
                    <Button Name="AllButton" Click="AllButton_Click" ToolTip="All" Margin="4,0">
                        <Viewbox Width="18" Height="18">
                            <Canvas Width="24" Height="24">
                                <Line X1="4" Y1="7" X2="20" Y2="7" Stroke="Black" StrokeThickness="1.5" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                                <Line X1="4" Y1="12" X2="20" Y2="12" Stroke="Black" StrokeThickness="1.5" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                                <Line X1="4" Y1="17" X2="20" Y2="17" Stroke="Black" StrokeThickness="1.5" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                            </Canvas>
                        </Viewbox>
                    </Button>
                </UniformGrid>
             </Grid>
        </Grid>

        <ListView Grid.Row="1" Margin="20,0,20,12" Name="lbTasksList" Background="White" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
            <ListView.Resources>
                <!-- Apply the custom vertical scrollbar style to the ListView's scrollbar -->
                <Style TargetType="ScrollBar">
                    <Setter Property="Width" Value="16" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ScrollBar">
                                <Grid Background="Transparent">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <!-- Up Arrow -->
                                    <RepeatButton x:Name="PART_LineUpButton" Grid.Row="0" Height="20" Focusable="False" IsTabStop="False" Background="Transparent" BorderThickness="0">
                                        <Viewbox Width="10" Height="8" HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <Canvas Width="8" Height="8">
                                                <!-- Two stroked lines forming the upper edges of a caret (pointing up) -->
                                                <Path Data="M1,7 L4,4 M7,7 L4,4"
                                                      Stroke="Black"
                                                      StrokeThickness="1.5"
                                                      StrokeStartLineCap="Round"
                                                      StrokeEndLineCap="Round"
                                                      Fill="Transparent"/>
                                            </Canvas>
                                        </Viewbox>
                                    </RepeatButton>

                                    <!-- Track with Thumb -->
                                    <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="ScrollBar.PageUpCommand" Background="Transparent" BorderThickness="0"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.Thumb>
                                            <!-- Let the Track determine Thumb size so it maps to scroll extent. Rectangle stretches inside to fill it. -->
                                            <Thumb x:Name="PART_Thumb" Cursor="Hand" Background="Transparent" BorderThickness="0">
                                                <Thumb.Template>
                                                    <ControlTemplate TargetType="Thumb">
                                                        <!-- Single black vertical line as the marker; stretch to fill Thumb height with rounded ends -->
                                                        <Grid Width="16" Background="Transparent">
                                                            <Rectangle Width="2" Fill="Black" HorizontalAlignment="Center" RadiusX="3" RadiusY="3"
                                                                       VerticalAlignment="Stretch" Margin="0" />
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Thumb.Template>
                                            </Thumb>
                                        </Track.Thumb>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="ScrollBar.PageDownCommand" Background="Transparent" BorderThickness="0"/>
                                        </Track.IncreaseRepeatButton>
                                    </Track>

                                    <!-- Down Arrow -->
                                    <RepeatButton x:Name="PART_LineDownButton" Grid.Row="2" Height="20" Focusable="False" IsTabStop="False" Background="Transparent" BorderThickness="0">
                                        <Viewbox Width="10" Height="8" HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <Canvas Width="8" Height="8">
                                                <!-- Two stroked lines forming the lower edges of a caret (pointing down) -->
                                                <Path Data="M1,1 L4,4 M7,1 L4,4"
                                                      Stroke="Black"
                                                      StrokeThickness="1.5"
                                                      StrokeStartLineCap="Round"
                                                      StrokeEndLineCap="Round"
                                                      Fill="Transparent"/>
                                            </Canvas>
                                        </Viewbox>
                                    </RepeatButton>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.Resources>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Border Background="White" Padding="2,2,2,2" Margin="0,0,0,2">
                        <Grid VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="32"/>
                            </Grid.ColumnDefinitions>
                            <CheckBox VerticalAlignment="Center" IsChecked="{Binding IsComplete}" Click="CheckBox_Click"/>
                            <Grid Grid.Column="1">
                                <TextBox x:Name="TaskTextBox"
                                         Text="{Binding TaskName, UpdateSourceTrigger=PropertyChanged}"
                                         Foreground="Black"
                                         Background="Transparent"
                                         BorderBrush="Transparent"
                                         VerticalAlignment="Center"
                                         FontSize="18"
                                         FontFamily="Segoe UI, Calibri, Arial"
                                         Padding="0"
                                         KeyUp="TaskTextBox_KeyUp"
                                         TextChanged="TaskTextBox_TextChanged"
                                         GotFocus="TaskTextBox_GotFocus"
                                         LostFocus="TaskTextBox_LostFocus"
                                         PreviewTextInput="TaskTextBox_PreviewTextInput"
                                         PreviewKeyDown="TaskTextBox_PreviewKeyDown"
                                         Loaded="TaskTextBox_Loaded"
                                         TextWrapping="NoWrap"
                                         ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                                         HorizontalAlignment="Stretch"
                                         AcceptsReturn="False">
                                    <TextBox.Style>
                                        <Style TargetType="TextBox">
                                            <Setter Property="Foreground" Value="Black"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsPlaceholder}" Value="True">
                                                    <Setter Property="Foreground" Value="Gray"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsComplete}" Value="True">
                                                    <Setter Property="TextDecorations" Value="Strikethrough"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsComplete}" Value="False">
                                                    <Setter Property="TextDecorations" Value="None"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsReadOnly}" Value="True">
                                                    <Setter Property="IsReadOnly" Value="True"/>
                                                    <Setter Property="Background" Value="#FFF8F8F8"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                    <TextBox.Template>
                                        <ControlTemplate TargetType="TextBox">
                                            <Grid>
                                                <ScrollViewer x:Name="PART_ContentHost" HorizontalScrollBarVisibility="Hidden"/>
                                                <TextBlock Text="Type new task here..."
                                                           Foreground="Gray"
                                                           FontStyle="Italic"
                                                           FontSize="18"
                                                           FontFamily="Segoe UI, Calibri, Arial"
                                                           IsHitTestVisible="False"
                                                           Margin="6,0,0,0"
                                                           VerticalAlignment="Center"
                                                           Visibility="{Binding IsPlaceholder, Converter={StaticResource BoolToVis}}"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </TextBox.Template>
                                </TextBox>
                            </Grid>

                            <StackPanel Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Center" Margin="8,0,0,0">
                                <!-- Description Icon -->
                                <Viewbox Width="18" Height="18" Visibility="{Binding Description, Converter={StaticResource CountToVis}, ConverterParameter=desc}">
                                    <Canvas Width="24" Height="24">
                                        <!-- Speech bubble with writing -->
                                        <Path Stroke="Gray" StrokeThickness="1.5" Fill="Transparent" Data="M3,6 Q3,3 6,3 L18,3 Q21,3 21,6 L21,15 Q21,18 18,18 L8,18 L3,21 Z"/>
                                        <Line X1="7" Y1="8" X2="17" Y2="8" Stroke="Gray" StrokeThickness="1"/>
                                        <Line X1="7" Y1="12" X2="15" Y2="12" Stroke="Gray" StrokeThickness="1"/>
                                    </Canvas>
                                </Viewbox>
                                <!-- People Icon: single or group -->
                                <Viewbox Width="18" Height="18" Visibility="{Binding People.Count, Converter={StaticResource CountToVis}, ConverterParameter=people}">
                                    <Canvas Width="24" Height="24">
                                        <!-- Single person silhouette -->
                                        <Ellipse Width="8" Height="8" Canvas.Left="8" Canvas.Top="4" Stroke="SlateGray" StrokeThickness="1.5"/>
                                        <Path Stroke="SlateGray" StrokeThickness="1.5" Fill="Transparent" Data="M6,18 Q12,14 18,18"/>
                                    </Canvas>
                                </Viewbox>
                                <Viewbox Width="18" Height="18" Visibility="{Binding People.Count, Converter={StaticResource CountToVis}, ConverterParameter=group}">
                                    <Canvas Width="24" Height="24">
                                        <!-- Group of three silhouettes -->
                                        <Ellipse Width="5" Height="5" Canvas.Left="3" Canvas.Top="8" Stroke="SlateGray" StrokeThickness="1"/>
                                        <Ellipse Width="5" Height="5" Canvas.Left="16" Canvas.Top="8" Stroke="SlateGray" StrokeThickness="1"/>
                                        <Ellipse Width="7" Height="7" Canvas.Left="8.5" Canvas.Top="4" Stroke="SlateGray" StrokeThickness="1.5"/>
                                        <Path Stroke="SlateGray" StrokeThickness="1.2" Fill="Transparent" Data="M2,21 Q12,16 22,21"/>
                                    </Canvas>
                                </Viewbox>
                                <!-- Meeting Icon -->
                                <Viewbox Width="18" Height="18" Visibility="{Binding Meetings.Count, Converter={StaticResource CountToVis}, ConverterParameter=meet}">
                                    <Canvas Width="24" Height="24">
                                        <!-- Calendar/clock/meeting icon -->
                                        <Rectangle Width="16" Height="12" Canvas.Left="4" Canvas.Top="6" Stroke="DarkSlateGray" StrokeThickness="1.2" RadiusX="2" RadiusY="2" Fill="Transparent"/>
                                        <Ellipse Width="6" Height="6" Canvas.Left="9" Canvas.Top="10" Stroke="DarkSlateGray" StrokeThickness="1"/>
                                        <Line X1="12" Y1="13" X2="12" Y2="11" Stroke="DarkSlateGray" StrokeThickness="1"/>
                                        <Line X1="12" Y1="13" X2="14" Y2="13" Stroke="DarkSlateGray" StrokeThickness="1"/>
                                    </Canvas>
                                </Viewbox>
                                <!-- Link icons: folder, file, or web (globe) -->
                                <Button Click="OpenLinkButton_Click" Background="Transparent" BorderThickness="0" Padding="0" Width="18" Height="18" Visibility="{Binding IsLinkFolder, Converter={StaticResource BoolToVis}}" ToolTip="{Binding LinkPath}" Cursor="Hand">
                                    <Viewbox Width="18" Height="18">
                                        <Canvas Width="24" Height="24">
                                            <!-- Folder icon -->
                                            <Path Stroke="DarkSlateGray" StrokeThickness="1.2" Fill="Transparent" Data="M3,8 L3,18 L21,18 L21,8 L12,8 L10,6 L3,6 Z"/>
                                        </Canvas>
                                    </Viewbox>
                                </Button>

                                <Button Click="OpenLinkButton_Click" Background="Transparent" BorderThickness="0" Padding="0" Width="18" Height="18" Visibility="{Binding IsLinkFile, Converter={StaticResource BoolToVis}}" ToolTip="{Binding LinkPath}" Cursor="Hand" Margin="4,0,0,0">
                                    <Viewbox Width="18" Height="18">
                                        <Canvas Width="24" Height="24">
                                            <!-- File icon -->
                                            <Path Stroke="DarkSlateGray" StrokeThickness="1.2" Fill="Transparent" Data="M6,3 L14,3 L18,7 L18,21 L6,21 Z"/>
                                            <Line X1="9" Y1="10" X2="15" Y2="10" Stroke="DarkSlateGray" StrokeThickness="1"/>
                                            <Line X1="9" Y1="14" X2="15" Y2="14" Stroke="DarkSlateGray" StrokeThickness="1"/>
                                        </Canvas>
                                    </Viewbox>
                                </Button>

                                <Button Click="OpenLinkButton_Click" Background="Transparent" BorderThickness="0" Padding="0" Width="18" Height="18" Visibility="{Binding IsLinkWeb, Converter={StaticResource BoolToVis}}" ToolTip="{Binding LinkPath}" Cursor="Hand" Margin="4,0,0,0">
                                    <Viewbox Width="18" Height="18">
                                        <Canvas Width="24" Height="24">
                                            <!-- Simple globe icon: circle with meridian and latitude lines -->
                                            <Ellipse Stroke="DarkSlateGray" StrokeThickness="1.2" Fill="Transparent" Width="16" Height="16" Canvas.Left="4" Canvas.Top="4"/>
                                            <Path Stroke="DarkSlateGray" StrokeThickness="1" Fill="Transparent" Data="M12,4 L12,20 M4,12 L20,12 M6,7 C8,9 16,9 18,7 M6,17 C8,15 16,15 18,17"/>
                                        </Canvas>
                                    </Viewbox>
                                </Button>
                             </StackPanel>

                            <!-- Date on the same row, right aligned -->
                            <TextBlock Grid.Column="3"
                                       Text="{Binding SetDate, StringFormat='{}{0:dd MMM yyyy}'}"
                                       Foreground="Gray"
                                       FontSize="12"
                                       Margin="6,0,8,0"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Right"
                                       Visibility="{Binding ShowDate, Converter={StaticResource BoolToVis}}"/>

                            <!-- ... Button -->
                            <Button Grid.Column="4" Content="..." Click="TaskOptionsButton_Click" Style="{StaticResource TaskOptionsButtonStyle}" Margin="0,0,2,0"/>
                        </Grid>
                    </Border>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <!-- Backup now button moved to bottom-right (own bottom row) -->
        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,8,8">
            <TextBlock x:Name="LastBackupTextBlock" Text="Last backup: --" VerticalAlignment="Center" Foreground="Gray" Margin="0,0,8,0"/>
            <Button Name="BackupNowButton" Click="BackupNowButton_Click" ToolTip="Create immediate backup of tasks" Padding="8,4">Backup now</Button>
        </StackPanel>
    </Grid>
</Window>
